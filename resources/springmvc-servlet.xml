<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- Bean配置 扫描注解 -->
	<context:component-scan
		base-package="cn.smbms.controller" />

	<!-- 装配消息转换器 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- 设置字符编码 -->
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>
				<property name="features">
					<!-- 输出 Date 的日期转换器 -->
					<value>WriteDateUseDateFormat</value>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- 装配自定义的数据（日期）转换器 -->
	<!-- 作用：解决 SpringMVC 日期类型无法绑定的问题，新增日期类型时可不用注解 @DateTimeFormat(pattern = 
		"yyyy-MM-dd") -->
	<bean id="myConversionService"
		class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="cn.smbms.tools.StringToDateConverter">
					<constructor-arg type="java.lang.String"
						value="yyyy-MM-dd" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 静态资源文件的引用 -->
	<mvc:resources location="/statics/" mapping="/statics/**" />

	<!-- 配置多视图解析器：允许同样的内容数据呈现不同的 view -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="favorParameter" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html;charset=UTF-8" />
				<entry key="json" value="application/html;charset=UTF-8" />
				<entry key="xml" value="application/html;charset=UTF-8" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<!-- 对转向页面的路径解析。prefix：前缀， suffix：后缀 -->
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>


	<!-- 全局异常处理 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.RuntimeException">login</prop>
			</props>
		</property>
	</bean>

	<!-- 配置MultipartResolver，用于上传文件，使用spring的CommonsMultipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>


</beans>